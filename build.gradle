repositories {
    mavenCentral()
    google()
}

apply plugin: "java-library"
apply plugin: "eclipse"
apply plugin: "idea"

dependencies {
    implementation 'com.formdev:flatlaf:1.6.5'
}

compileJava {
    options.release = 11
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

project.ext.appName = "PokeMMO"
project.ext.mainClassName = "com.pokeemu.unix.UnixInstaller"
project.ext.mainJar = "unix-installer.jar"

jar {
  archiveFileName = project.mainJar

  duplicatesStrategy = DuplicatesStrategy.EXCLUDE

  manifest {
    attributes(
      'Main-Class': project.mainClassName
    )
  }
}

task dist(type: GradleBuild) {
    buildName "dist"
    startParameter.projectProperties = gradle.startParameter.projectProperties
    tasks = ['clean', 'createRuntime', 'jar']
}

assemble.dependsOn dist

task getDeps(type: Copy) {
    from sourceSets.main.runtimeClasspath
    into 'runtime/'

    doFirst {
        ant.delete(dir: 'runtime')
        ant.mkdir(dir: 'runtime')
    }

    doLast {
        ant.delete(dir: 'runtime')
    }
}

// creates a slim JDK runtime for distribution
task createRuntime(type: Exec) {
    doFirst() {
        project.delete("${buildDir}/runtime")
    }

    String runtimePath = "${buildDir}/runtime"
    String jlinkPath = "$System.env.JRE_TARGET"+"/bin/jlink"

    workingDir project.projectDir
    commandLine = [
            jlinkPath,
            '--add-modules', 'java.se,java.base,java.desktop,jdk.unsupported,jdk.crypto.ec',
            '--strip-debug',
            '--no-header-files',
            '--no-man-pages',
            "--vm=server",
            "--compress=2",
            '--output', runtimePath
    ]
}